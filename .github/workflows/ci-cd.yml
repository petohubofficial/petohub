name: CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 17.x
        cache: 'yarn'
    - run: npm i -g yarn
    - run: yarn
    - run: yarn lint
      
  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - uses: actions/setup-node@v3
      with:
        node-version: 17.x
        cache: 'yarn'
    - run: npm i -g yarn
    - run: yarn
    - run: yarn build

    - uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        source: ".,!node_modules,!.git"
        target: "/root"

    - uses: appleboy/ssh-action@master
      env:
        ENV_VARS: ${{ secrets.ENV_VARS }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        envs: ENV_VARS
        script: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          cd /root
          rm -rf build
          tar -xvf deploy.tar
          rm deploy.tar
          cd build
          yarn
          echo "$ENV_VARS" >> .env.local
          pm2 restart ecosystem.config.js
